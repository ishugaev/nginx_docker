upstream php_proxy_8888 {
    server 127.0.0.1:8888;
}

upstream round_robin {
    server 127.0.0.1:8001;
    server 127.0.0.1:8002;
    server 127.0.0.1:8003;
}

upstream least_connections {
    least_conn;
    server 127.0.0.1:8001;
    server 127.0.0.1:8002;
    server 127.0.0.1:8003;
}

upstream ip_hash {
    ip_hash;
    server 127.0.0.1:8001;
    server 127.0.0.1:8002;
    server 127.0.0.1:8003;
}

upstream weighted {
    server 127.0.0.1:8001 weight=2;
    server 127.0.0.1:8002;
    server 127.0.0.1:8003;
}

server {
    listen 80 default_server;
    listen 443 ssl default_server;

    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    #server_name yoursite.local www.yoursite.local;
    index index.html index.htm index.php;
    root /var/www/yoursite;

    access_log /var/www/yoursite/yoursite.access.log;
    error_log /var/www/yoursite/yoursite.error.log;

    # location / {
    #     try_files $uri $uri/ =404;
    # }

    location = /api/complete { # Debug header
        return 200 '{"status": "success", "message": "Your request is complete"}';
        default_type application/json;
    }

    location = /complete { # Debug header
        return 200 '{"status": "success", "message": "Your request is complete"}';
        default_type application/json;
        access_log /var/www/yoursite/complete.log;
    }

    location = /access {
        return 200 '{"status": "success", "message": "Check Access"}';
        default_type application/json;
        allow 172.17.0.1;
        deny all;
    }

    location /admin {
        auth_basic "Please Authenticate";
        auth_basic_user_file /etc/nginx/passwords;
        index index.html;
        try_files $uri $uri/ /admin/index.html;
    }

    location = /proxy {
        proxy_pass http://php_proxy_8888/;
    }

    location = /roundrobin {
        proxy_pass http://round_robin/;
    }

    location = /leastconn {
        proxy_pass http://least_connections/;
    }

    location = /ip_hash {
        proxy_pass http://ip_hash/;
    }

    location = /weighted {
        proxy_pass http://weighted/;
    }

    location /images/ {
        autoindex on;
    }

    error_page 404 /404.html;

    location /404.html {
        internal;
    }
    
    error_page 500 502 503 504 /500.html;

    location /500.html {
        internal;
    }

    location /500 {
        fastcgi_pass unix:/this-will-fail;
    }
}
